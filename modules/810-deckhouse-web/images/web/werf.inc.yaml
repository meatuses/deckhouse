{{ $_ := set . "Env" (.Env | default "FE") }}

image: {{ .ModuleName }}/{{ .ImageName }}
from: {{ .Images.BASE_NGINX_ALPINE }}
ansible:
  setup:
  - name: "Copy nginx.conf"
    copy:
      content: |
        {{- .Files.Get "modules/810-deckhouse-web/images/web/nginx.conf" | nindent 8 }}
      dest: /etc/nginx/nginx.conf
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}/static
  add: /app/_site/documentation
  to: /app
  before: setup
---
artifact: {{ .ModuleName }}/{{ .ImageName }}/k8s-static
from: gcr.io/k8s-staging-sig-docs/k8s-website-hugo:v0.110.0-a1533959ab60
ansible:
  install:
    - shell: npm ci
      args:
        chdir: /src
  setup:
    - shell: |
        rsync --ignore-existing /src/content/en/ /src/content/ru/ -a
        hugo #--panicOnWarning
        find /src/public/ -type f -exec sed -Ei "s#(href=['\"])../#\1#g; s#(href=['\"].*)../(ru|en)/#\1../#g;" {} +
        rsync --ignore-existing /src/public/docs/ /src/public/en/docs/ -a
        rsync --ignore-existing /src/public/docs/ /src/public/ru/docs/ -a
        rsync --ignore-existing /src/public/images/ /src/public/ru/images/ -a
        rsync --ignore-existing /src/public/images/ /src/public/en/images/ -a
        #exit 1
      args:
        chdir: /src
git:
- url: git@github.com:kubernetes/website.git
  tag: snapshot-final-v1.26
  add: /
  to: /src
  owner: 1313
  group: 1313
  includePaths:
    - assets
    - content/en/docs/concepts
    - content/en/docs/images
    - content/en/docs/reference
    - content/en/docs/tasks
    - content/en/docs/tutorials
    - content/en/examples
    - content/en/includes
    - content/ru/docs/concepts
    - content/ru/docs/reference
    - content/ru/docs/tasks
    - content/ru/docs/tutorials
    - content/ru/examples
    - content/ru/includes
    - data/canonical-tags
    - data/i18n/ru
    - data/i18n/en
    - i18n/en.toml
    - i18n/ru.toml
    - static
    - themes
    - package.json
    - package-lock.json
  excludePaths:
    - content/en/docs/reference/issues-security
  stageDependencies:
    install:
      - package.json
      - package-lock.json
    setup: '**/*'
- add: /modules/810-{{ $.ModuleName }}/images/{{ $.ImageName }}/k8s
  to: /src
  includePaths:
    - layouts
    - hugo.toml
  stageDependencies:
    setup: '**/*'
---
artifact: {{ .ModuleName }}/{{ .ImageName }}/static
from: {{ .Images.BASE_JEKYLL }}
ansible:
  install:
    - shell: |
        apk add rsync jq tree
        export YQ_VERSION=v4.33.3 YQ_BINARY=yq_linux_amd64
        wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY} -O /usr/bin/yq && chmod +x /usr/bin/yq
        gem update --system 3.2.3
        gem install bundler -v 2.4.3
    - name: "Install Dependencies"
      shell: bundle install
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
  setup:
    - name: "Create modules.yml"
      shell: |
        export MODULES_DIR=/comparison
        bash ./modules_list.sh 1>_data/modules.yaml
        cat modules_menu_skip  | cut -d\- -f 2-  | jq -nRc '[inputs] | map({"name":.}) | {module_names:.}' > _data/exclude.json
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - name: "{{ .Env }} version. Merging modules of different releases..."
      shell: |
        cp -rf /src/ee/modules /src >& /dev/null
        cp -rf /src/fe/modules /src >& /dev/null
        cp /src/modules/010-prometheus-crd/crds/*.yaml /src/modules/300-prometheus/crds
        rm -rf /src/modules/010-prometheus-crd
      args:
        executable: /bin/bash
    - name: "Preparing modules structure"
      shell: |
        export MODULES_SRC_DIR=/src/modules
        export MODULES_DST_EN=/srv/jekyll-data/documentation/modules_en
        export MODULES_DST_RU=/srv/jekyll-data/documentation/modules_ru
        bash ./modules_prepare.sh
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - name: "Adding permalinks..."
      shell: |
        for i in $(find . -regex '.*.md' -print); do
          grep -q "^---" $i
          if [ $? -gt 0 ]; then continue; fi
          cat $i | tr -d '\n' | grep -lv "^---.*permalink: .*---" &> /dev/null
          if [ $? -eq 0 ]; then
            # permalink is absent, add permalink
            # PERMALINK="/$(echo $i | sed -E 's#(modules_)(en|ru)/#\2/modules/#' | sed 's#docs/##g'| tr '[:upper:]' '[:lower:]' | sed 's#\.md$#.html#' | sed 's#^\.\/##' | sed 's#readme\.html$#index.html#' )"
            PERMALINK="/$(echo $i | sed -E 's#(modules_)(en|ru)/#\2/modules/#' | sed 's#docs/##g'| tr '[:upper:]' '[:lower:]' | sed 's#\.md$#.html#' | sed 's#^\.\/##' | sed 's#readme\.html$##' )"
            sed -i "1apermalink: $PERMALINK" $i
          fi
        done
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - name: "Generating configuration schemas..."
      shell: |
        export MODULES_DIR=modules_en
        bash ./modules_generate_configuration.sh
        export MODULES_DIR=modules_ru MODULES_LANG=ru
        bash ./modules_generate_configuration.sh
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation
    - name: "Generating cluster configuration schemas..."
      shell: |
        export MODULES_DIR=modules_en
        bash ./generate_cluster_configuration.sh
        export MODULES_DIR=modules_ru MODULES_LANG=ru
        bash ./generate_cluster_configuration.sh
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation
    - name: "Generating CR schemas..."
      shell: |
        export MODULES_DIR=modules_en
        bash ./modules_generate_cr.sh
        export MODULES_DIR=modules_ru
        bash ./modules_generate_cr.sh
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation
    - name: "Preparing OSS licence info..."
      shell: |
        export MODULES_DIR=/src/modules
        bash ./modules_generate_ossinfo.sh
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - name: "Generating sidebars..."
      shell: |
        export MODULES_DIR=modules_ru
        /bin/bash ./modules_make_data > _data/sidebars/modules.yml2 &&  sed '1,+4d' _data/sidebars/modules.yml >> _data/sidebars/modules.yml2  && mv -f _data/sidebars/modules.yml2 _data/sidebars/modules.yml
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - name: "Generating sidebars for the Kubernetes documentation..."
      shell: |
        #tree --prune --noreport -Jdf -I 'images' ./ |
        #  jq ' first.contents | walk(if type == "object" and has("contents") and (.contents |length == 0) then del(.contents) else . end) |  ( .. | select(type=="object")) |= with_entries(if .key == "name" then .key = "url" elif .key == "type" then .key = "title" else . end) |  walk(if type == "object" and has("contents") then ( .folders=.contents | del(.contents) ) else . end) | walk(if type == "object" and has("title") then ( .title = (.url | split("/") | last ) ) else . end) ' |
        #  yq -P | sed -E 's/^/        /; s#url: ./#url: /k8s/docs/#; /\ +url:/s#/?$#/#' >> /srv/jekyll-data/documentation/_data/sidebars/main.yml
        cd /srv/jekyll-data/documentation/en/k8s/docs
        /srv/jekyll-data/documentation/generate_k8s_sidebar.sh "/k8s/docs/" 2 | sed -i '3r /dev/stdin' /srv/jekyll-data/documentation/_data/sidebars/k8s-docs.yml
        cd /srv/jekyll-data/documentation/ru/k8s/docs
        /srv/jekyll-data/documentation/generate_k8s_sidebar.sh "/k8s/docs/" 2 >> /srv/jekyll-data/documentation/_data/sidebars/k8s-docs.yml
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - name: "Extracting the default Kubernetes version..."
      shell: |
        echo "default: \"$(grep "DefaultKubernetesVersion" -m 1 _data/dhctl-base.go | grep -Eo '[0-9.]+')\"" > _data/version_kubernetes.yml
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - name: "Filling in the array of supported OS & K8S versions..."
      shell: |
        sed '/^bashible:/r version_map_addition.yml' version_map.yml >> supported_versions.yml
      args:
        warn: false
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/_data/
    - name: "Converting public documentation links to internal relative..."
      shell: |
        grep -rl '](https://deckhouse.io' /srv/jekyll-data/documentation/_data/schemas/ | \
          xargs sed -Ei 's$\]\(https://deckhouse.io/(ru|en)/documentation/v[0-9]+/(modules/|#)$](/\1/\2$'
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - copy:
        content: |
          {{- .Files.Get "modules/810-deckhouse-web/images/web/_config.yml" | nindent 10 }}
        dest: /tmp/_config_additional.yml
    - copy:
        content: |
          {{- .Files.Get "modules/810-deckhouse-web/images/web/site/_data/topnav.yml" | nindent 10 }}
        dest: /srv/jekyll-data/documentation/_data/topnav.yml
    - copy:
        content: |
          {{- .Files.Get "modules/810-deckhouse-web/images/web/site/_includes/footer.html" | nindent 10 }}
        dest: /srv/jekyll-data/site/_includes/footer.html
    - name: "Creating additional config..."
      shell: |
        echo -e "\nd8Revision: {{ .Env }}" >> /tmp/_config_additional.yml
      args:
        executable: /bin/bash
    - name: "Generating static files of the documentation part..."
      shell: |
        mkdir -m 777 -p /app/_site/
        JEKYLL_ENV=production jekyll build -d /app/_site/documentation/ --config _config.yml,/tmp/_config_additional.yml --profile
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
        warn: false
    - name: "Generating static file's of the main part..."
      shell: |
        JEKYLL_ENV=production jekyll build -d /app/_site/site/ --config _config.yml,/tmp/_config_additional.yml  --profile
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/site/
    - shell: |
        cp -Rf /app/_site/site/assets /app/_site/documentation/
        cp -Rf /app/_site/site/images /app/_site/documentation/
        cp -Rf /app/_site/site/includes /app/_site/documentation/
        cp -Rf /app/_site/site/ru/includes /app/_site/documentation/ru
        cp -Rf /app/_site/site/en/includes /app/_site/documentation/en
        cp -Rf /app/_site/site/ru /app/_site/documentation/
        cp -Rf /app/_site/site/en /app/_site/documentation/
        rm -rf /app/_site/documentation/compare/
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}/k8s-static
  add: /src/public/en
  to: /srv/jekyll-data/documentation/en/k8s
  before: setup
  includePaths:
  - docs/concepts/
#  - docs
#  - ru
#  - en
#  - examples
#  - images
- artifact: {{ .ModuleName }}/{{ .ImageName }}/k8s-static
  add: /src/public/ru
  to: /srv/jekyll-data/documentation/ru/k8s
  before: setup
  includePaths:
  - docs/concepts/
#  - docs
#  - ru
#  - en
#  - examples
#  - images
git:
- add: /docs
  to: /srv/jekyll-data
  owner: jekyll
  group: jekyll
  includePaths:
    - documentation
    - site
  excludePaths:
    - '**/werf*.yaml'
    - '**/docker-compose.yml'
    - '**/Makefile'
    - '**/.werf'
    - '**/.helm'
    - documentation/pages/internal
    - documentation/config
    - site/pages/*.html
    - site/_includes/footer.html
  stageDependencies:
    install: ['site/Gemfile','site/Gemfile.lock']
    setup: '**/*'
- add: /
  to: /comparison
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
  includePaths:
  - modules/**/docs/README.md
  - ee/modules/**/docs/README.md
- add: /ee/fe
  to: /comparison/fe
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
  includePaths:
  - modules/**/docs/README.md
{{ tpl (.Files.Get "docs/documentation/werf-git-section.inc.yaml") . }}
